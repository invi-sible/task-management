{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "GetTasksLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/task-management-backend-dev-getTasks"
      }
    },
    "CreateTaskLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/task-management-backend-dev-createTask"
      }
    },
    "UpdateTaskLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/task-management-backend-dev-updateTask"
      }
    },
    "DeleteTaskLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/task-management-backend-dev-deleteTask"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "task-management-backend",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "task-management-backend",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "GetTasksLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
          "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
        },
        "Handler": "handler.get_tasks",
        "Runtime": "python3.8",
        "FunctionName": "task-management-backend-dev-getTasks",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MONGO_URI": "mongodb://localhost:27017/taskdb"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GetTasksLogGroup"
      ]
    },
    "CreateTaskLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
          "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
        },
        "Handler": "handler.create_task",
        "Runtime": "python3.8",
        "FunctionName": "task-management-backend-dev-createTask",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MONGO_URI": "mongodb://localhost:27017/taskdb"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CreateTaskLogGroup"
      ]
    },
    "UpdateTaskLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
          "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
        },
        "Handler": "handler.update_task",
        "Runtime": "python3.8",
        "FunctionName": "task-management-backend-dev-updateTask",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MONGO_URI": "mongodb://localhost:27017/taskdb"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UpdateTaskLogGroup"
      ]
    },
    "DeleteTaskLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
          "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
        },
        "Handler": "handler.delete_task",
        "Runtime": "python3.8",
        "FunctionName": "task-management-backend-dev-deleteTask",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "MONGO_URI": "mongodb://localhost:27017/taskdb"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DeleteTaskLogGroup"
      ]
    },
    "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetTasksLambdaFunction"
        },
        "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
      }
    },
    "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateTaskLambdaFunction"
        },
        "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
      }
    },
    "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateTaskLambdaFunction"
        },
        "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
      }
    },
    "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteTaskLambdaFunction"
        },
        "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-task-management-backend",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceTasks": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "tasks",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceTasksIdVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceTasks"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodTasksGet": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceTasks"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "GetTasksLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "GetTasksLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodTasksPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceTasks"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CreateTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "CreateTaskLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodTasksIdVarPut": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "PUT",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceTasksIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "UpdateTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "UpdateTaskLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodTasksIdVarDelete": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "DELETE",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceTasksIdVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "DeleteTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "DeleteTaskLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1743964987283": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodTasksGet",
        "ApiGatewayMethodTasksPost",
        "ApiGatewayMethodTasksIdVarPut",
        "ApiGatewayMethodTasksIdVarDelete"
      ]
    },
    "GetTasksLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetTasksLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CreateTaskLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateTaskLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "UpdateTaskLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateTaskLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "DeleteTaskLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteTaskLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
      "Export": {
        "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
      }
    },
    "GetTasksLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c"
      },
      "Export": {
        "Name": "sls-task-management-backend-dev-GetTasksLambdaFunctionQualifiedArn"
      }
    },
    "CreateTaskLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU"
      },
      "Export": {
        "Name": "sls-task-management-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
      }
    },
    "UpdateTaskLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI"
      },
      "Export": {
        "Name": "sls-task-management-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
      }
    },
    "DeleteTaskLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM"
      },
      "Export": {
        "Name": "sls-task-management-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-task-management-backend-dev-ServiceEndpoint"
      }
    }
  }
}