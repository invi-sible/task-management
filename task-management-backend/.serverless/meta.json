{
  "D:\\data\\Test Task\\task-management-backend\\serverless.yml": {
    "versionFramework": "4.11.1",
    "servicePath": "D:\\data\\Test Task\\task-management-backend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "task-management-backend",
      "org": "joelsteiner",
      "app": "task-app",
      "provider": {
        "name": "aws",
        "runtime": "python3.8",
        "region": "us-east-1",
        "environment": {
          "MONGO_URI": "mongodb://localhost:27017/taskdb"
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "GetTasksLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-management-backend-dev-getTasks"
              }
            },
            "CreateTaskLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-management-backend-dev-createTask"
              }
            },
            "UpdateTaskLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-management-backend-dev-updateTask"
              }
            },
            "DeleteTaskLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/task-management-backend-dev-deleteTask"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "task-management-backend",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "task-management-backend",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "GetTasksLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                  "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
                },
                "Handler": "handler.get_tasks",
                "Runtime": "python3.8",
                "FunctionName": "task-management-backend-dev-getTasks",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "MONGO_URI": "mongodb://localhost:27017/taskdb"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetTasksLogGroup"
              ]
            },
            "CreateTaskLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                  "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
                },
                "Handler": "handler.create_task",
                "Runtime": "python3.8",
                "FunctionName": "task-management-backend-dev-createTask",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "MONGO_URI": "mongodb://localhost:27017/taskdb"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateTaskLogGroup"
              ]
            },
            "UpdateTaskLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                  "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
                },
                "Handler": "handler.update_task",
                "Runtime": "python3.8",
                "FunctionName": "task-management-backend-dev-updateTask",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "MONGO_URI": "mongodb://localhost:27017/taskdb"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "UpdateTaskLogGroup"
              ]
            },
            "DeleteTaskLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                  "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
                },
                "Handler": "handler.delete_task",
                "Runtime": "python3.8",
                "FunctionName": "task-management-backend-dev-deleteTask",
                "MemorySize": 1024,
                "Timeout": 6,
                "Environment": {
                  "Variables": {
                    "MONGO_URI": "mongodb://localhost:27017/taskdb"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "DeleteTaskLogGroup"
              ]
            },
            "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetTasksLambdaFunction"
                },
                "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
              }
            },
            "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateTaskLambdaFunction"
                },
                "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
              }
            },
            "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "UpdateTaskLambdaFunction"
                },
                "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
              }
            },
            "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "DeleteTaskLambdaFunction"
                },
                "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-task-management-backend",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceTasks": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "tasks",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceTasksIdVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceTasks"
                },
                "PathPart": "{id}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodTasksGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTasks"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "GetTasksLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "GetTasksLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTasksPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTasks"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CreateTaskLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CreateTaskLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTasksIdVarPut": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "PUT",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTasksIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "UpdateTaskLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "UpdateTaskLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodTasksIdVarDelete": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "DELETE",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceTasksIdVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "DeleteTaskLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "DeleteTaskLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1743964987283": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodTasksGet",
                "ApiGatewayMethodTasksPost",
                "ApiGatewayMethodTasksIdVarPut",
                "ApiGatewayMethodTasksIdVarDelete"
              ]
            },
            "GetTasksLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetTasksLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CreateTaskLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "UpdateTaskLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "UpdateTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "DeleteTaskLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "DeleteTaskLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
              "Export": {
                "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
              }
            },
            "GetTasksLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-GetTasksLambdaFunctionQualifiedArn"
              }
            },
            "CreateTaskLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
              }
            },
            "UpdateTaskLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
              }
            },
            "DeleteTaskLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM"
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-task-management-backend-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "getTasks": {
          "handler": "handler.get_tasks",
          "events": [
            {
              "http": {
                "path": "tasks",
                "method": "get",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "task-management-backend-dev-getTasks",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c"
        },
        "createTask": {
          "handler": "handler.create_task",
          "events": [
            {
              "http": {
                "path": "tasks",
                "method": "post",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "task-management-backend-dev-createTask",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU"
        },
        "updateTask": {
          "handler": "handler.update_task",
          "events": [
            {
              "http": {
                "path": "tasks/{id}",
                "method": "put",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "task-management-backend-dev-updateTask",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI"
        },
        "deleteTask": {
          "handler": "handler.delete_task",
          "events": [
            {
              "http": {
                "path": "tasks/{id}",
                "method": "delete",
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "task-management-backend-dev-deleteTask",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM"
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "region": "us-east-1",
      "environment": {
        "MONGO_URI": "mongodb://localhost:27017/taskdb"
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetTasksLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/task-management-backend-dev-getTasks"
            }
          },
          "CreateTaskLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/task-management-backend-dev-createTask"
            }
          },
          "UpdateTaskLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/task-management-backend-dev-updateTask"
            }
          },
          "DeleteTaskLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/task-management-backend-dev-deleteTask"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "task-management-backend",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "task-management-backend",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetTasksLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
              },
              "Handler": "handler.get_tasks",
              "Runtime": "python3.8",
              "FunctionName": "task-management-backend-dev-getTasks",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGO_URI": "mongodb://localhost:27017/taskdb"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTasksLogGroup"
            ]
          },
          "CreateTaskLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
              },
              "Handler": "handler.create_task",
              "Runtime": "python3.8",
              "FunctionName": "task-management-backend-dev-createTask",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGO_URI": "mongodb://localhost:27017/taskdb"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateTaskLogGroup"
            ]
          },
          "UpdateTaskLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
              },
              "Handler": "handler.update_task",
              "Runtime": "python3.8",
              "FunctionName": "task-management-backend-dev-updateTask",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGO_URI": "mongodb://localhost:27017/taskdb"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateTaskLogGroup"
            ]
          },
          "DeleteTaskLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
                "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
              },
              "Handler": "handler.delete_task",
              "Runtime": "python3.8",
              "FunctionName": "task-management-backend-dev-deleteTask",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "MONGO_URI": "mongodb://localhost:27017/taskdb"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteTaskLogGroup"
            ]
          },
          "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTasksLambdaFunction"
              },
              "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
            }
          },
          "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateTaskLambdaFunction"
              },
              "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
            }
          },
          "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateTaskLambdaFunction"
              },
              "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
            }
          },
          "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteTaskLambdaFunction"
              },
              "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-task-management-backend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceTasks": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "tasks",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceTasksIdVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceTasks"
              },
              "PathPart": "{id}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTasksGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTasks"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTasksLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetTasksLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTasksPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTasks"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateTaskLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateTaskLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTasksIdVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTasksIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateTaskLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateTaskLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodTasksIdVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTasksIdVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteTaskLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteTaskLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1743964987283": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTasksGet",
              "ApiGatewayMethodTasksPost",
              "ApiGatewayMethodTasksIdVarPut",
              "ApiGatewayMethodTasksIdVarDelete"
            ]
          },
          "GetTasksLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTasksLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CreateTaskLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateTaskLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateTaskLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateTaskLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteTaskLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteTaskLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
            "Export": {
              "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetTasksLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-GetTasksLambdaFunctionQualifiedArn"
            }
          },
          "CreateTaskLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
            }
          },
          "UpdateTaskLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
            }
          },
          "DeleteTaskLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM"
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-task-management-backend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": true,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "jd3jc6BXbwljRmKrhM",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: task-management-backend\r\n\r\norg: joelsteiner\r\napp: task-app  \r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.8\r\n  region: us-east-1\r\n  environment:\r\n    MONGO_URI: \"mongodb://localhost:27017/taskdb\"\r\n\r\nfunctions:\r\n  getTasks:\r\n    handler: handler.get_tasks\r\n    events:\r\n      - http:\r\n          path: tasks\r\n          method: get\r\n  createTask:\r\n    handler: handler.create_task\r\n    events:\r\n      - http:\r\n          path: tasks\r\n          method: post\r\n  updateTask:\r\n    handler: handler.update_task\r\n    events:\r\n      - http:\r\n          path: tasks/{id}\r\n          method: put\r\n  deleteTask:\r\n    handler: handler.delete_task\r\n    events:\r\n      - http:\r\n          path: tasks/{id}\r\n          method: delete\r\n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "4b991907-f94e-4b84-aac8-6651bfd96e8d",
    "orgName": "joelsteiner",
    "userId": "v0Nb0HpyzxMW6fmyKX",
    "userName": "joelsteiner",
    "serviceProviderAwsAccountId": "180982677621",
    "serviceProviderAwsCfStackName": "task-management-backend-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:180982677621:stack/task-management-backend-dev/228236e0-1317-11f0-b12d-0e5a1a4659fd",
    "serviceProviderAwsCfStackCreated": "2025-04-06T18:44:13.376Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "CREATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "GetTasksLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:180982677621:function:task-management-backend-dev-getTasks:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-management-backend-dev-GetTasksLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "DeleteTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:180982677621:function:task-management-backend-dev-deleteTask:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-management-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "UpdateTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:180982677621:function:task-management-backend-dev-updateTask:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-management-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CreateTaskLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:180982677621:function:task-management-backend-dev-createTask:1",
        "Description": "Current Lambda function version",
        "ExportName": "sls-task-management-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://tqr8x2adp8.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-task-management-backend-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
        "ExportName": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "GetTasksLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/task-management-backend-dev-getTasks"
          }
        },
        "CreateTaskLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/task-management-backend-dev-createTask"
          }
        },
        "UpdateTaskLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/task-management-backend-dev-updateTask"
          }
        },
        "DeleteTaskLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/task-management-backend-dev-deleteTask"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "task-management-backend",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/task-management-backend-dev*:*:*"
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "task-management-backend",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "GetTasksLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
              "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
            },
            "Handler": "handler.get_tasks",
            "Runtime": "python3.8",
            "FunctionName": "task-management-backend-dev-getTasks",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "MONGO_URI": "mongodb://localhost:27017/taskdb"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetTasksLogGroup"
          ]
        },
        "CreateTaskLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
              "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
            },
            "Handler": "handler.create_task",
            "Runtime": "python3.8",
            "FunctionName": "task-management-backend-dev-createTask",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "MONGO_URI": "mongodb://localhost:27017/taskdb"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateTaskLogGroup"
          ]
        },
        "UpdateTaskLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
              "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
            },
            "Handler": "handler.update_task",
            "Runtime": "python3.8",
            "FunctionName": "task-management-backend-dev-updateTask",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "MONGO_URI": "mongodb://localhost:27017/taskdb"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "UpdateTaskLogGroup"
          ]
        },
        "DeleteTaskLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
              "S3Key": "serverless/task-management-backend/dev/1743965021136-2025-04-06T18:43:41.136Z/task-management-backend.zip"
            },
            "Handler": "handler.delete_task",
            "Runtime": "python3.8",
            "FunctionName": "task-management-backend-dev-deleteTask",
            "MemorySize": 1024,
            "Timeout": 6,
            "Environment": {
              "Variables": {
                "MONGO_URI": "mongodb://localhost:27017/taskdb"
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "DeleteTaskLogGroup"
          ]
        },
        "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetTasksLambdaFunction"
            },
            "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
          }
        },
        "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateTaskLambdaFunction"
            },
            "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
          }
        },
        "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "UpdateTaskLambdaFunction"
            },
            "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
          }
        },
        "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "DeleteTaskLambdaFunction"
            },
            "CodeSha256": "uHG04ItMfENmIPuAAViyHc0hzI10eYjdc4IIxQwnoJY="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-task-management-backend",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceTasks": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "tasks",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceTasksIdVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceTasks"
            },
            "PathPart": "{id}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodTasksGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTasks"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "GetTasksLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "GetTasksLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTasksPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTasks"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CreateTaskLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CreateTaskLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTasksIdVarPut": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "PUT",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTasksIdVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "UpdateTaskLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "UpdateTaskLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodTasksIdVarDelete": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "DELETE",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceTasksIdVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "DeleteTaskLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "DeleteTaskLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1743964987283": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodTasksGet",
            "ApiGatewayMethodTasksPost",
            "ApiGatewayMethodTasksIdVarPut",
            "ApiGatewayMethodTasksIdVarDelete"
          ]
        },
        "GetTasksLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetTasksLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CreateTaskLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateTaskLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "UpdateTaskLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "UpdateTaskLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "DeleteTaskLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "DeleteTaskLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-fe013e56-86aa",
          "Export": {
            "Name": "sls-task-management-backend-dev-ServerlessDeploymentBucketName"
          }
        },
        "GetTasksLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetTasksLambdaVersionEyCJm0jRLFHIbtCACEFtnxqWtoWnolkROA9h1c"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-GetTasksLambdaFunctionQualifiedArn"
          }
        },
        "CreateTaskLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateTaskLambdaVersionKE2PLKexHigtmRZTVhDXLlIIt3qMo5MXjGzf9ASFBU"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-CreateTaskLambdaFunctionQualifiedArn"
          }
        },
        "UpdateTaskLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "UpdateTaskLambdaVersionKeJXmVDfewFYJ2s2vRjLMyMYq7y6qJGIZgXXvPm6jI"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-UpdateTaskLambdaFunctionQualifiedArn"
          }
        },
        "DeleteTaskLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "DeleteTaskLambdaVersion7i8fsE1R5cixqpznWlQBWjOqwnT242ap7uSiLViJvM"
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-DeleteTaskLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-task-management-backend-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}